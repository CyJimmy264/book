* Концепции
** Основные
*** Система децентрализованной идентификации через свидетельства электронными подписями
*** Верифицируемая система принятия решений открытым голосованием

* Сценарии
** User
   Точка входа не аутентифицированного пользователя.
*** Sign in
    * email
    * password
**** success:
     redirects ** Book

*** Sign up
    * email
    * password
**** success:
     redirects ** Book

** Book
   Точка входа аутентифицированного пользователя.

   Записи книги. Аналог транзакций.

*** Introduction — представление
    Форма:
    * *Имя
    * Отчество
    * Фамилия
    * Дата рождения
    * Почтовый адрес

    При отправке, создаётся запись в книге.

    Пример: [[file:Examples/Introduction.yml][Examples/Introduction.yml]]

** Profile
   Страница профиля пользователя.

*** Управление ключами
**** Отображение публичного ключа
**** Генерация ключей
***** Generate key pair
      С помощью OpenPGP.js создаёт пару.

      Помещает их в соответствующие textarea.

***** Update keys
      Отправляет Public key в БД.

      Отправляет Private key в localStorage.

      Всё что хранилось до этого пока пропадает.

* Модели
** Record
   * Content
   * Author Id

* Вклад
** Book.org, Book.md, README.md
   README.md является ссылкой на Book.md.

   Book.md экспортируется из Book.org.

   Book.md править вручную нельзя.
*** Emacs: Игнорирование преобразования расширений ссылок на .org документы
    Сейчас, функция ~org-md-export-to-markdown~ при обработке ссылок на .org
    файлы автоматически заменяет их ссылками на .md файлы.

    Чтобы избавиться от такой особенности, в качестве грязного решения, можно
    залезть в её исходник с помощью M-x ~find-function~, найти там
    ~org-md-link~, и поправить строку:

    #+begin_src elisp
      (if (string= ".org" (downcase (file-name-extension raw-path ".")))
    #+end_src

    например на

    #+begin_src elisp
      (if (string= ".orgmd" (downcase (file-name-extension raw-path ".")))
    #+end_src

    Альтернативные решения приветствуются.
